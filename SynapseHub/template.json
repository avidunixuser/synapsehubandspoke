{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "workspaces_synapsehubworkspace_name": {
            "defaultValue": "synapsehubworkspace",
            "type": "String"
        },
        "storageAccounts_synapsehubstorage_name": {
            "defaultValue": "synapsehubstorage",
            "type": "String"
        },
        "templateSpecs_Synapsehubandspoke_name": {
            "defaultValue": "Synapsehubandspoke",
            "type": "String"
        },
        "privateLinkHubs_synapseprivatelinkhub_name": {
            "defaultValue": "synapseprivatelinkhub",
            "type": "String"
        },
        "virtualNetworks_synapsehubandspokevnet_name": {
            "defaultValue": "synapsehubandspokevnet",
            "type": "String"
        },
        "privateEndpoints_synapsehubprivateendpoint_name": {
            "defaultValue": "synapsehubprivateendpoint",
            "type": "String"
        },
        "networkSecurityGroups_synapsehubandspoke_nsg_name": {
            "defaultValue": "synapsehubandspoke-nsg",
            "type": "String"
        },
        "privateDnsZones_privatelink_azuresynapse_net_name": {
            "defaultValue": "privatelink.azuresynapse.net",
            "type": "String"
        },
        "privateEndpoints_hubworkspaceprivateendpoint_name": {
            "defaultValue": "hubworkspaceprivateendpoint",
            "type": "String"
        },
        "privateEndpoints_synapsestorageprivateendpoint_name": {
            "defaultValue": "synapsestorageprivateendpoint",
            "type": "String"
        },
        "privateDnsZones_privatelink_dev_azuresynapse_net_name": {
            "defaultValue": "privatelink.dev.azuresynapse.net",
            "type": "String"
        },
        "privateDnsZones_privatelink_dfs_core_windows_net_name": {
            "defaultValue": "privatelink.dfs.core.windows.net",
            "type": "String"
        },
        "networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name": {
            "defaultValue": "synapsehubandspokevnet-default-nsg-eastus",
            "type": "String"
        },
        "virtualNetworks_spoke1_vent_externalid": {
            "defaultValue": "/subscriptions/f42cdd05-e6d8-4cc0-81aa-a5b83a471c1f/resourceGroups/synapsespoke1/providers/Microsoft.Network/virtualNetworks/spoke1-vent",
            "type": "String"
        },
        "virtualNetworks_spoke2_vnet_externalid": {
            "defaultValue": "/subscriptions/f42cdd05-e6d8-4cc0-81aa-a5b83a471c1f/resourceGroups/synapsespoke2/providers/Microsoft.Network/virtualNetworks/spoke2-vnet",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-04-01",
            "name": "[parameters('networkSecurityGroups_synapsehubandspoke_nsg_name')]",
            "location": "eastus",
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAnyCustom8080Outbound",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'), 'AllowAnyCustom8080Outbound')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureResourceManager",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAnyCustom8080Outbound-frontdoor",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'), 'AllowAnyCustom8080Outbound-frontdoor')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureFrontDoor.Frontend",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAnyCustom8080Outbound-ad",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'), 'AllowAnyCustom8080Outbound-ad')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureActiveDirectory",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAnyCustom8080Outbound-monitor",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'), 'AllowAnyCustom8080Outbound-monitor')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-04-01",
            "name": "[parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name')]",
            "location": "eastus",
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowCorpnet",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'), 'AllowCorpnet')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "CorpNetPublic",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2700,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowSAW",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'), 'AllowSAW')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "CorpNetSaw",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 2701,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_azuresynapse_net_name')]",
            "location": "global",
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name')]",
            "location": "global",
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 4,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZones_privatelink_dfs_core_windows_net_name')]",
            "location": "global",
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs",
            "apiVersion": "2022-02-01",
            "name": "[parameters('templateSpecs_Synapsehubandspoke_name')]",
            "location": "eastus",
            "tags": {
                "synapsehubandspoke": "synapsehubandspoke template"
            },
            "properties": {
                "description": "Deploy Synapse hub and spoke topology with hub hosting storage and spoke accessing it over private endpoint with managed identity"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[parameters('storageAccounts_synapsehubstorage_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Synapse/privateLinkHubs",
            "apiVersion": "2021-06-01",
            "name": "[parameters('privateLinkHubs_synapseprivatelinkhub_name')]",
            "location": "eastus",
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'), '/AllowAnyCustom8080Outbound')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureResourceManager",
                "access": "Allow",
                "priority": 100,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'), '/AllowAnyCustom8080Outbound-ad')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureActiveDirectory",
                "access": "Allow",
                "priority": 120,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'), '/AllowAnyCustom8080Outbound-frontdoor')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureFrontDoor.Frontend",
                "access": "Allow",
                "priority": 110,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'), '/AllowAnyCustom8080Outbound-monitor')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspoke_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 130,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'), '/AllowCorpnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "CorpNetPublic",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2700,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'), '/AllowSAW')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'))]"
            ],
            "properties": {
                "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "CorpNetSaw",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 2701,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'), '/synapsehubstorage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint synapsestorageprivateendpoint with resource guid 9740551f-8483-45df-bd31-93a5f2d2917c"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.6"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'), '/synapsehubworkspace')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint hubworkspaceprivateendpoint with resource guid 9938a026-bace-4d23-ad89-c26d78fc39ca"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.5"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'), '/synapsespoke2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint synapsespoke2 with resource guid 56aa13f3-a42b-4d6a-92e4-ca2d7317fc19"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.8"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'), '/synapseworkspacespoke1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint synapsespoke1-pe with resource guid ffdf89c9-a67d-44a5-aff6-c05c3aa0f659"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.7"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_azuresynapse_net_name'), '/web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azuresynapse_net_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint synapsehubprivateendpoint with resource guid 16220981-e57c-41b5-93e4-402849c0d76a"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_azuresynapse_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azuresynapse_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-04-01",
            "name": "[parameters('virtualNetworks_synapsehubandspokevnet_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'))]"
            ],
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_synapsehubandspokevnet_name'), 'default')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "hub-spoke1-peering",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_synapsehubandspokevnet_name'), 'hub-spoke1-peering')]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[parameters('virtualNetworks_spoke1_vent_externalid')]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    },
                    {
                        "name": "hub-spoke2-peering",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_synapsehubandspokevnet_name'), 'hub-spoke2-peering')]",
                        "properties": {
                            "peeringState": "Connected",
                            "peeringSyncLevel": "FullyInSync",
                            "remoteVirtualNetwork": {
                                "id": "[parameters('virtualNetworks_spoke2_vnet_externalid')]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "doNotVerifyRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.3.0.0/16"
                                ]
                            },
                            "remoteVirtualNetworkAddressSpace": {
                                "addressPrefixes": [
                                    "10.3.0.0/16"
                                ]
                            }
                        },
                        "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings"
                    }
                ],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('virtualNetworks_synapsehubandspokevnet_name'), '/hub-spoke1-peering')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_synapsehubandspokevnet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[parameters('virtualNetworks_spoke1_vent_externalid')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('virtualNetworks_synapsehubandspokevnet_name'), '/hub-spoke2-peering')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_synapsehubandspokevnet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "peeringSyncLevel": "FullyInSync",
                "remoteVirtualNetwork": {
                    "id": "[parameters('virtualNetworks_spoke2_vnet_externalid')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "doNotVerifyRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/16"
                    ]
                },
                "remoteVirtualNetworkAddressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/templateSpecs/versions",
            "apiVersion": "2022-02-01",
            "name": "[concat(parameters('templateSpecs_Synapsehubandspoke_name'), '/1.0')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/templateSpecs', parameters('templateSpecs_Synapsehubandspoke_name'))]"
            ],
            "tags": {
                "synapsehubandspoke": "synapsehubandspoke template"
            },
            "properties": {
                "mainTemplate": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_synapsehubstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_synapsehubstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_synapsehubstorage_name'), '/', parameters('storageAccounts_synapsehubstorage_name'), '.71cbda75-7c22-4c16-bfe3-aba54d05bb2a')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]"
            ],
            "properties": {
                "provisioningState": "Succeeded",
                "privateEndpoint": {},
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Auto-Approved",
                    "actionRequired": "None"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_synapsehubstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_synapsehubstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[parameters('workspaces_synapsehubworkspace_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]"
            ],
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]",
                    "createManagedPrivateEndpoint": false,
                    "accountUrl": "https://synapsehubstorage.dfs.core.windows.net",
                    "filesystem": "test"
                },
                "encryption": {},
                "managedResourceGroupName": "managedhubandspoke",
                "sqlAdministratorLogin": "sqladminuser",
                "privateEndpointConnections": [
                    {
                        "properties": {
                            "privateEndpoint": {},
                            "privateLinkServiceConnectionState": {
                                "status": "Approved"
                            }
                        }
                    }
                ],
                "publicNetworkAccess": "Enabled",
                "cspWorkspaceAdminProperties": {
                    "initialWorkspaceAdminObjectId": "763bc0a3-fe1c-4655-8811-40ad436ee541"
                },
                "azureADOnlyAuthentication": true,
                "trustedServiceBypassEnabled": false
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/auditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/azureADOnlyAuthentications",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": true
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/bigDataPools",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/synapsehubspark')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "tags": {
                "synapsehubandspoke": "synapse hub spark pool"
            },
            "properties": {
                "sparkVersion": "3.3",
                "nodeCount": 0,
                "nodeSize": "Medium",
                "nodeSizeFamily": "MemoryOptimized",
                "autoScale": {
                    "enabled": true,
                    "minNodeCount": 3,
                    "maxNodeCount": 10
                },
                "autoPause": {
                    "enabled": true,
                    "delayInMinutes": 15
                },
                "isComputeIsolationEnabled": false,
                "sessionLevelPackagesEnabled": true,
                "dynamicExecutorAllocation": {
                    "enabled": false
                },
                "isAutotuneEnabled": false,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/dedicatedSQLminimalTlsSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/default')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "minimalTlsVersion": "1.2"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/extendedAuditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/firewallRules",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/allowAll')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/integrationruntimes",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/AutoResolveIntegrationRuntime')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/privateEndpointConnections",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/hubworkspaceprivateendpoint-6a02d991-e0ac-4c98-ae34-3bf637ae450c')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "privateEndpoint": {},
                "privateLinkServiceConnectionState": {
                    "status": "Approved"
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/securityAlertPolicies",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/sqlPools",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/synapsehubdedicatedsqlpool')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "tags": {
                "synapsehubandspoke": "Synapse hub sql pool"
            },
            "sku": {
                "name": "DW100c",
                "capacity": 0
            },
            "properties": {
                "maxSizeBytes": 263882790666240,
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "storageAccountType": "GRS",
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/vulnerabilityAssessments",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_azuresynapse_net_name'), '/6g2hcsqddbtnm')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azuresynapse_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_synapsehubandspokevnet_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_synapsehubandspokevnet_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'), '/6g2hcsqddbtnm')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_synapsehubandspokevnet_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_synapsehubandspokevnet_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'), '/6g2hcsqddbtnm')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_synapsehubandspokevnet_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_synapsehubandspokevnet_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2023-04-01",
            "name": "[parameters('privateEndpoints_hubworkspaceprivateendpoint_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_synapsehubandspokevnet_name'), 'default')]"
            ],
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_hubworkspaceprivateendpoint_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_hubworkspaceprivateendpoint_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_hubworkspaceprivateendpoint_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]",
                            "groupIds": [
                                "Dev"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[concat(parameters('privateEndpoints_hubworkspaceprivateendpoint_name'), '-nic')]",
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_synapsehubandspokevnet_name'), 'default')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2023-04-01",
            "name": "[parameters('privateEndpoints_synapsehubprivateendpoint_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/privateLinkHubs', parameters('privateLinkHubs_synapseprivatelinkhub_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_synapsehubandspokevnet_name'), 'default')]"
            ],
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_synapsehubprivateendpoint_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_synapsehubprivateendpoint_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_synapsehubprivateendpoint_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Synapse/privateLinkHubs', parameters('privateLinkHubs_synapseprivatelinkhub_name'))]",
                            "groupIds": [
                                "Web"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[concat(parameters('privateEndpoints_synapsehubprivateendpoint_name'), '-nic')]",
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_synapsehubandspokevnet_name'), 'default')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2023-04-01",
            "name": "[parameters('privateEndpoints_synapsestorageprivateendpoint_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_synapsehubandspokevnet_name'), 'default')]"
            ],
            "tags": {
                "synapsehubandspoke": "synapse workspaces"
            },
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_synapsestorageprivateendpoint_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_synapsestorageprivateendpoint_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_synapsestorageprivateendpoint_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]",
                            "groupIds": [
                                "dfs"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[concat(parameters('privateEndpoints_synapsestorageprivateendpoint_name'), '-nic')]",
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_synapsehubandspokevnet_name'), 'default')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('privateEndpoints_hubworkspaceprivateendpoint_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_hubworkspaceprivateendpoint_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-dev-azuresynapse-net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dev_azuresynapse_net_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('privateEndpoints_synapsehubprivateendpoint_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_synapsehubprivateendpoint_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azuresynapse_net_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-azuresynapse-net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_azuresynapse_net_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('privateEndpoints_synapsestorageprivateendpoint_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_synapsestorageprivateendpoint_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-dfs-core-windows-net",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_dfs_core_windows_net_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2023-04-01",
            "name": "[concat(parameters('virtualNetworks_synapsehubandspokevnet_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_synapsehubandspokevnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_synapsehubandspokevnet_default_nsg_eastus_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccounts_synapsehubstorage_name'), '/default/test')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_synapsehubstorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_synapsehubstorage_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/sqlPools/auditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/synapsehubdedicatedsqlpool/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/sqlPools', parameters('workspaces_synapsehubworkspace_name'), 'synapsehubdedicatedsqlpool')]",
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/sqlPools/extendedAuditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/synapsehubdedicatedsqlpool/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/sqlPools', parameters('workspaces_synapsehubworkspace_name'), 'synapsehubdedicatedsqlpool')]",
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/sqlPools/geoBackupPolicies",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/synapsehubdedicatedsqlpool/Default')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/sqlPools', parameters('workspaces_synapsehubworkspace_name'), 'synapsehubdedicatedsqlpool')]",
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/sqlPools/securityAlertPolicies",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/synapsehubdedicatedsqlpool/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/sqlPools', parameters('workspaces_synapsehubworkspace_name'), 'synapsehubdedicatedsqlpool')]",
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/sqlPools/transparentDataEncryption",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/synapsehubdedicatedsqlpool/current')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/sqlPools', parameters('workspaces_synapsehubworkspace_name'), 'synapsehubdedicatedsqlpool')]",
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "status": "Enabled"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/sqlPools/vulnerabilityAssessments",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('workspaces_synapsehubworkspace_name'), '/synapsehubdedicatedsqlpool/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/sqlPools', parameters('workspaces_synapsehubworkspace_name'), 'synapsehubdedicatedsqlpool')]",
                "[resourceId('Microsoft.Synapse/workspaces', parameters('workspaces_synapsehubworkspace_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        }
    ]
}